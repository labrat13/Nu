Файл описания разработки (тодо) проекта UAMX-2.

Классы, что входят в сборку УАМХ-2:
+ElementLink			- написан, СсылкаНаЭлемент, готов к тестированию, не документирован.
+ElementLinkCollection	- написан, КоллекцияСсылокНаЭлемент, готов к тестированию, не документирован.
+ElementId				- написан, ИдентификаторЭлемента,  готов к тестированию, не документирован.
-Element				- UAMXelement, написан, разработан состав полей, не документирован.
+ElementIdManager		- написан, МенеджерИдентификаторовЭлементов, готов к тестированию.
-Engine					- накидан, надо переделывать код для поддержки наследования.
+EngineSettings			- ФайлНастроекДвижка написан, готов к тестированию, документирован.
-DbAdapter				- создан, не наполнен, не документирован.
-StorageFSManager		- создан, не наполнен, не документирован.
-EngineLog				- не создан
-Utility				- создан, наполнен, не документирован в вики. 
-ElementClassTree		- создан, не наполнен, не документирован в вики. есть в Оператор 
-ElementClassBuilder - не создан 	из Оператора или Хранилищ.
... ?

Кроме этого, нужно также:
- написать автоматические тесты для всех классов.
- написать документацию в классах. Примеры использования класса.
- написать теорию УАМХ в вики.
- Написать устройство УАМХ-2: какие классы в нее входят, чтоони должны делать, и как использовать эти классы сборки.
- написать документацию в вики. Поставить ссылки на классы кода.
- создать chm-файл документации.
- описать версию сборки в файлах и в вики.
- написать файл Readme.
- Надо придумать и опробовать, как подключать сборку в другой проект.
- сделать бекап всего проекта под версией.

21 августа 2019
- сборка компилируется - допилил. чтобы провести тестирование ElementLink.TryParse()
- Тестировал ElementLink.TryParse(). Работает.
  - надо добавить разбор и вывод аргументов позже. Но надо! пока я не забыл, что там и как.
  - надо дописать на ней остальные функции класса ElementLink, они от нее зависят.
     И на этом класс ElementLink будет готов к тестированию, считай написан.
    - написал все функции класса ElementLink 
- Была идея сраз все это заводить в Тапп. Но Тапп не готов, а результаты нужны сейчас.

24 августа 2019
- В общем, сборка классов получится непроработанная, наследовать придется с множеством костылей.
  При таком количестве костылей надо сборку включать непосредственно в рабочий проект, а не в отдельном проекте держать.
- функции статические версии сборки Движка и класса Движка перенесены в EngineSettings.
  И сделаны не-статическими, чтобы их можно было переопределить в производном классе.
  - и их НАДО переопределить, иначе они будут возвращать версию сборки УАМХ, а не движка.
  - убрано поле Element.StorageVersion, так как нет статической функции получения версии движка.
  - в общем, это проблема: эти функции удобны статическими, но реализация требует, чтобы они были:
    - объявлены в текущем классе, 
    - реализованы в производном классе, 
    - но использовались в сборке УАМХ.
  - это проблема понимания архитектуры Движка. Я не понимаю сейчас, что и как должно быть устроено.
    - Значит, сборка УАМХ еще потребует переделки, пока я не соберу все удачные решения воедино.
- Добавлен класс FileLink - он отвечает за ссылки на файлы и папки, и внешние ссылки на элементы Хранилища.
  - ElementLink отвечает за внутренние ссылки - внутри Хранилища.
  - класс совсем не проработан пока что, это просто набор статических функций.        
- Класс ElementClassTree надо создать 
  - материалы я натаскал, теперь надо перепроектировать класс и переназвать правильно.
  - и написать код класса 
- Класс StorageFSManager надо спроектировать и создать.
  - проблема со статическими функциями - их надо задать тут, и переопределить в производном классе.
    А статические функции - нельзя переопределить?
  - нужен состав файлов абстрактного каталога Хранилища.
    - а толку, если в производном классе все крупные функции надо переопределять?
  - класс только может содержать инструментальные функции для этой темы.    
- Класс Utility надо растащить по соответствующим классам, 
   или наоборот - не основные функции из классов стаскать в класс Utility?
  - яхз пока что. 
    
      