++ Менеджер Идентификаторов Элементов
[template: ШаблонКарточкиГлоссария]
Состояние: [В РАЗРАБОТКЕ]

Управляет объектами ИдентификаторЭлемента, обеспечивает их уникальность, выделение и освобождение.

+++Пространство имен
* todo.глоссарий.форма: Укажите здесь пространство имен (Namespace), к которому принадлежит сущность. Например: Движок.Подсистема Лога. Это позволит быстрее ориентироваться в большом проекте.

+++Используется в
* todo.глоссарий.форма: Перечислите здесь страницы концепций, в которых используется сущность, и роль сущности в этой концепции. Например: Концепция Х - помывка слона.
 
+++Версии
* todo.глоссарий.форма: Создайте новую страницу для версии описания сущности, добавив к имени "Версия0". Так осуществляется поддержка версий страниц глоссария. 

+++Обязанности
* Хранить кэш-значение максимального идентификатора элемента из всех что есть в системе
* Хранить ссылку на объект ДвижокХранилища для обратного вызова.
* Создать объект менеджера (со ссылкой на объект Движка)
* Очистить переменную кэша максимального идентификатора
* Загрузить существующие значения для кеша из БД при старте движка
* Получить максимальный ИД элементов из таблиц БД
* Получить новый объект идентификатора элемента
* Подтвердить создание нового элемента
* Подтвердить удаление существующего элемента
* Получить строковое представление объекта для отладчика

+++Сущности предметной области
* todo.глоссарий.форма: Перечислите выявленные сущности предметной области здесь.
* 

+++Соответствующий класс кода
 * UAMX-2.ElementIdManager
++++Свойства - данные
++++Методы

+++Дополнительная информация 
* Менеджер идентификаторов элементов. Подобен такому же из Тапп.
* Этот кеш идентификаторов элемента работает так:
    1. Когда приложение стартует, до начала создания элементов надо провести инициализацию менеджера.
        Для этого функция InitCacheValues() вызывает intGetMaxId(), которая запрашивает хранилище 
        (БД адаптер или что там в качестве хранилища), получить максимальный ИД элементов, существующих в БД.
    2. Когда создается новый элемент, для него нужно получить новый уникальный идентификатор.
        Для этого вызывается функция getNewElementId(), которая вызывает intGetMaxId();. 
        Полученный из кеша или из БД максимальный идентификатор существующего элемента инкрементируется,
        и новое значение используется для создания объекта ИдентификаторЭлемента. Но в кеш не записывается!
        После того, как элемент успешно создан и записан в БД, вызовом ChangeIdCashOnCreateElement() кеш обновляется до актуального значения.
         Такой механизм предполагает, что элементы создаются и записываются в БД строго последовательно.
         В противном случае нескольким элементам будет выдан одинаковый идентификатор.
    2.1 Если же при создании элемента произошла ошибка, то ничего не надо делать. Новый вызов getNewElementId() вернет тот же номер, что и в прошлый неудачный раз.
    2.2 Если все запуталось,  нужно вызвать ClearIdCache(). Она сбросит значение кэша в 0 и при следующем вызове getNewElementId() актуальное значение будет загружено из БД функцией intGetMaxId() так же, как при иницмализации менеджера.     
    3. При удалении элемента нужно вызывать ChangeIdCashOnRemoveElement().
        Она нужна только если удаляется последний созданный элемент.
        Если это не так, то ничего делать с кешем не надо - ведь последний элемент имеет максимальный ид, значит все в порядке.
        Если же удаляется последний элемент, с максимальным ид, то кеш обнуляется,
        чтобы при следующем обращении к кешу получать значение максимального идентификатора элемента из БД.
        Поскольку неизвестно, сколько еще элементов было удалено, и каким должен быть теперь новый максимальный идентификатор элемента.
        
* Использование класса:
    - Если класс используется внутри предлагаемой схемы с движком Engine, то ничего делать не надо, можно просто его использовать.
     Класс получает значение наибольшего существующего идентификатора элемента из this.m_manager.DbAdapter.getMaxElementId();
    - Если класс используется в другом раскладе, например, с другим типом хранилища данных, то
     следует переопределить функцию protected virtual Int32 intGetMaxId() в производном классе. 
     Она должна извлечь из БД значение наибольшего существующего идентификатора элемента.
     Остальные аспекты поведения класса не изменяются.
     </remarks> 

